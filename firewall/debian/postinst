#!/bin/bash

set -e

#
# Skip, if we are not in "configure" state
#
if [ "$1" != "configure" ]; then
        echo "I: Skipping configuration"
        exit 0
fi

#
#  The prefix of our tree.
#
PREFIX=/etc/symbiosis/firewall

#
#  The old tree.
#
OLD=/etc/firewall



#
#  If we have the old tree then move it into place.
#
if [ -d $OLD -a -d $OLD/incoming.d -a -d $OLD/outgoing.d ]; then

    #
    #  Make sure we have the new directory.
    #
    if [ ! -d $PREFIX ]; then
        mkdir -p $PREFIX
    fi

    #
    #  Remove the blacklisted IPs, they'll return
    #
    rm -rf $OLD/blacklist.d || true

    #
    #  Move each file
    #
    for i in blacklist.d/ incoming.d/ local.d/ outgoing.d/ patterns.d/ whitelist.d/ ; do

        #
        #  Make sure the dest exists.
        #
        mkdir -p $PREFIX/$i     || true

        #
        # Move any contents
        #
        if [ -d $OLD/$i ]; then
            mv $OLD/$i/* $PREFIX/$i >/dev/null 2>/dev/null || true
            rm -rf $OLD/$i          >/dev/null 2>/dev/null || true
        fi
    done

    #
    #  Disable if we should
    #
    if [ -e $OLD/disabled ]; then
        touch $PREFIX/disabled
    fi
    if [ -e $OLD/disabled.blacklist ]; then
        touch $PREFIX/disabled.blacklist
    fi

    #
    #  Remove the old tree.
    #
    rm -rf $OLD || true
fi


#
#  Otherwise we have to make a new prefix and start from scratch
#
if [ ! -d $PREFIX ]; then
    mkdir -p $PREFIX
fi


#
#  If we're disabled then disable ourself
#
if [ -e /opt/bytemark/no-firewall ]; then
    touch $PREFIX/disabled
    rm /opt/bytemark/no-firewall
fi

if [ -e /etc/firewall.exceptions ]; then
    rm -f /etc/firewall.exceptions
fi

#
#  If /opt/bytemark is present remove it
#
if [ -d /opt/bytemark ]; then
    rm -rf /opt/bytemark
fi

#
#  See if there are any entries present.
#
incoming=0
for i in $PREFIX/incoming.d/*-*; do
    if [ -e $i ]; then
        incoming=1
    fi
done

if [ "$incoming" = "0" ]; then

    echo "Creating default rules for the incoming firewall"

    if  [ ! -d $PREFIX/incoming.d/ ]; then
        mkdir -p $PREFIX/incoming.d/
        touch  $PREFIX/incoming.d/.empty
    fi

    touch  $PREFIX/incoming.d/00-ssh
    touch  $PREFIX/incoming.d/05-ping
    touch  $PREFIX/incoming.d/10-http
    touch  $PREFIX/incoming.d/20-ftp
    touch  $PREFIX/incoming.d/30-imap
    touch  $PREFIX/incoming.d/40-imaps
    touch  $PREFIX/incoming.d/50-pop3
    touch  $PREFIX/incoming.d/55-dns
    touch  $PREFIX/incoming.d/60-pop3s
    touch  $PREFIX/incoming.d/70-smtp
    touch  $PREFIX/incoming.d/75-ntp
    touch  $PREFIX/incoming.d/80-smtps
    touch  $PREFIX/incoming.d/85-submission
    touch  $PREFIX/incoming.d/99-reject
    touch  $PREFIX/incoming.d/00-related
    touch  $PREFIX/incoming.d/00-established

    #
    #  Now create our outgoing directory, if it is missing.
    #
    if  [ ! -d $PREFIX/outgoing.d/ ]; then
        mkdir -p $PREFIX/outgoing.d/
        touch $PREFIX/outgoing.d/.empty
    fi

    #
    #  Default outgoing rules.
    #
    echo "Creating default rules for firewall"
    touch $PREFIX/outgoing.d/50-www-data
fi


#
#  Make sure that DNS is unconditionally allowed.
#
touch  $PREFIX/incoming.d/55-dns



#
#  Cope with prior mistaken rules
#
if [ -e $PREFIX/outgoing.d/00-established ]; then

    # create rule in correct directory.
    touch $PREFIX/incoming.d/00-established

    # remove the wrong file.
    rm $PREFIX/outgoing.d/00-established
fi

#
#  Flush and reload the firewall unless we're in a chroot
#
if [ -z "$CHROOT" ]; then

    firewall --flush
    firewall

    #
    #  Remove denyhosts.
    #
    if [ -d /usr/share/denyhosts/ ]; then
        cat > /etc/cron.hourly/purgy <<EOF
#!/bin/bash
dpkg --purge bytemark-vhost-ssh-protection denyhosts 2>/dev/null >/dev/null
rm -f /etc/denyhosts.conf*
rm /etc/cron.hourly/purgy
EOF
        chmod 755 /etc/cron.hourly/purgy
    fi

else

    echo " - In a chroot()"
    echo " - Not flushing / running firewall"
    echo " - In a chroot()"
fi


#
#  Cleanup
#
if [ -e /etc/network/if-up.d/www-data ]; then
    rm -f /etc/network/if-up.d/www-data
fi
if [ -e /etc/network/if-down.d/www-data ]; then
    rm -f /etc/network/if-down.d/www-data
fi

#
#  Setup new rules
#
cat >/etc/network/if-up.d/bytemark-firewall <<EOF
#!/bin/bash
echo "Loading firewall"
/usr/bin/firewall
echo "Done"
EOF
cat >/etc/network/if-down.d/bytemark-firewall <<EOF
#!/bin/bash
echo "Cleaning firewall"
/usr/bin/firewall --flush
echo "Done"
EOF
chmod 755 /etc/network/if-up.d/bytemark-firewall
chmod 755 /etc/network/if-down.d/bytemark-firewall

#DEBHELPER#
exit 0
