#!/bin/bash
#
#  This script has to do a lot of things, mostly relating to the Apache
# setup.
#
# Steve
# --
#



set -e

#
# Skip, if we are not in "configure" state
#
if [ "$1" != "configure" ]; then
        echo "I: Skipping configuration"
        exit 0
fi

#
#  Remove default site
#
if [ -e /etc/apache2/sites-enabled/000-default ]; then
    rm -f /etc/apache2/sites-enabled/000-default
fi


#
#  Remove any existing sites.
#
for i in mass-hosting mass-hosting.ssl zz-mass-hosting zz-mass-hosting.ssl default 00-default ; do
    if [ -e /etc/apache2/sites-enabled/$i ]; then
        rm /etc/apache2/sites-enabled/$i
    fi
done

#
#  Find IP address of the primary interfaces
#
ip=$(/usr/bin/symbiosis-ip)


#
#  Create the mass-hosting configuration file
#
cat > /etc/apache2/sites-available/zz-mass-hosting <<EOF

####
##
#
# DO NOT EDIT THIS FILE - CHANGES WILL BE OVERWRITTEN
#
#  This file is automatically generated.
#
#  http://symbiosis.bytemark.co.uk/docs/ch-webreference.html
#
##
###

NameVirtualHost $ip:80

<VirtualHost $ip:80>

        #
        #  This is the directory people are redirected to
        # if their site is empty.
        #
        Alias /bytemark/ "/usr/share/symbiosis-static/"
        <Directory "/usr/share/symbiosis-static/">
                DirectoryIndex index.html index.php
                AllowOverride All
        </Directory>


        #
        #  And this makes that redirection happen.
        #
        <LocationMatch "^/+$">
                Options -Indexes
                ErrorDocument 403 /bytemark/
        </LocationMatch>


        #
        #  Allow users to override settings via .htaccess
        #
        <Directory "/srv">
                AllowOverride all
        </Directory>


        #
        #  We will allow global CGIs without any effort though.
        #
        AddHandler cgi-script .cgi


        #
        #  Disable the "single" name for this server.
        #
        UseCanonicalName        Off


        #
        #  Aliases for testing sites prior to DNS migration.
        #
        RewriteEngine On
        RewriteCond %{HTTP_HOST} ^(.*)\.testing\.(.*)\$
        RewriteRule ^/(.*)\$  /srv/%1/public/htdocs/\$1


        #
        #  The document root + CGI-directories.
        #
        VirtualDocumentRoot     /srv/%0/public/htdocs/
        VirtualScriptAlias      /srv/%0/public/cgi-bin/


        #
        # Update documentroot settings for each vhost.
        #
        SetVirtualDocumentRoot on

        #
        #  We need to log the virtual hostname the incoming request was
        # made against, so that the cron-job in /etc/cron.daily may generate
        # statistics for each domain.
        #
        CustomLog /var/log/apache2/access.log "%V %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
</VirtualHost>


EOF


cat > /etc/apache2/sites-available/zz-mass-hosting.ssl <<EOF

####
##
#
# DO NOT EDIT THIS FILE - CHANGES WILL BE OVERWRITTEN
#
#  This file is automatically generated.
#
#  http://vhost.bytemark.co.uk/docs/ch-webreference.html
#
##
###

NameVirtualHost $ip:443

<VirtualHost $ip:443>

        #
        #  Ensure that the SSL options are configured.
        #
        SSLEngine On
        SSLCertificateFile /etc/ssl/ssl.combined
        SSLOptions +StrictRequire


        #
        #  This is the directory people are redirected to
        # if their site is empty.
        #
        Alias /bytemark/ "/usr/share/symbiosis-static/"
        <Directory "/usr/share/symbiosis-static/">
                DirectoryIndex index.html index.php
                AllowOverride All
        </Directory>

        #
        #  And this makes that redirection happen.
        #
        <LocationMatch "^/+$">
                Options -Indexes
                ErrorDocument 403 /bytemark/
        </LocationMatch>


        #
        #  Allow users to override settings via .htaccess
        #
        <Directory "/srv">
                AllowOverride all
        </Directory>


        #
        #  We will allow global CGIs without any effort though.
        #
        AddHandler cgi-script .cgi


        #
        #  Disable the "single" name for this server.
        #
        UseCanonicalName        Off


        #
        #  Aliases for testing sites prior to DNS migration.
        #
        RewriteEngine On
        RewriteCond %{HTTP_HOST} ^(.*)\.testing\.(.*)\$
        RewriteRule ^/(.*)\$  /srv/%1/public/htdocs/\$1


        #
        #  The document root + CGI-directories.
        #
        VirtualDocumentRoot     /srv/%0/public/htdocs/
        VirtualScriptAlias      /srv/%0/public/cgi-bin/


        #
        # Update documentroot settings for each vhost.
        #
        SetVirtualDocumentRoot on

        #
        #  We need to log the virtual hostname the incoming request was
        # made against, so that the cron-job in /etc/cron.daily may generate
        # statistics for each domain.
        #
        CustomLog /var/log/apache2/access.log "%V %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
</VirtualHost>


EOF


#
#  Ensure we listen for SSL requests
#
if ( ! grep 443 /etc/apache2/ports.conf >/dev/null 2>/dev/null ); then
    echo "Listen 443" >> /etc/apache2/ports.conf
fi


#
#  Flag to see if we need to make the key
#
makessl=0

#
#  Now test the current cert to see if it came from a
# bytemark imager machine
#
if [ -e /etc/ssl/ssl.combined ]; then

    #
    # Get the issuer
    #
    issue=$(openssl x509 -noout -in /etc/ssl/ssl.combined  -subject | sed -e 's#.*CN=\([^/]\+\).*#\1#')

    #
    # If the is an imager then re-make it
    #
    if [ "$issue" = "imager.bytemark.co.uk" -o "$issue" = "imager1.bytemark.co.uk" -o "$issue" = "imager2.bytemark.co.uk" -o "$issue" = "imager3.bytemark.co.uk" ]; then
        makessl=1
    fi
else
    #
    #  No cert.  We need to make it.
    #
    makessl=1
fi

#
# Rename ssl.pem to ssl.crt, and link it back.
#
if [ -f /etc/ssl/ssl.pem ] ; then
  mv -b /etc/ssl/ssl.pem /etc/ssl/ssl.crt
  ln -s /etc/ssl/ssl.crt /etc/ssl/ssl.pem
fi

if [ "$makessl" == "1" ]; then

    echo "Creating SSL key"

    #
    #  Make the key
    #
    openssl req -subj "/C=GB/ST=England/L=York/CN=$(cat /etc/hostname)" -new -x509 -days 3650 -nodes -out  /etc/ssl/ssl.crt -keyout /etc/ssl/ssl.key

    #
    #  Combine Cert + Key
    #
    cat /etc/ssl/ssl.key /etc/ssl/ssl.crt > /etc/ssl/ssl.combined
fi


#
#  Enable the new sites
#
a2ensite zz-mass-hosting           >/dev/null 2>/dev/null
a2ensite zz-mass-hosting.ssl       >/dev/null 2>/dev/null

#
#  Enable common modules
#
a2enmod rewrite      >/dev/null 2>/dev/null
a2enmod cgi          >/dev/null 2>/dev/null
a2enmod php5         >/dev/null 2>/dev/null
a2enmod ssl          >/dev/null 2>/dev/null
a2enmod dir          >/dev/null 2>/dev/null

#
#  Ensure that index.htm is valid.
#
cat > /etc/apache2/mods-enabled/dir.conf <<EOF
<IfModule mod_dir.c>
          DirectoryIndex index.html index.htm index.cgi index.pl index.php index.xhtml
</IfModule>
EOF


#
#  Use the bytemark module for mass-hosting.
#
a2enmod  mod_vhost_bytemark  >/dev/null 2>/dev/null
a2dismod vhost_alias         >/dev/null 2>/dev/null


#
#  Change the server tokens
#
if [ -e /etc/apache2/conf.d/security ]; then

    perl -pi -e 's/^ServerTokens.*/ServerTokens Prod/g'  /etc/apache2/conf.d/security
    # if there is no setting then add it.
    if ( ! grep ^ServerTokens /etc/apache2/conf.d/security  >/dev/null 2>/dev/null ) ; then
        echo "ServerTokens Prod" >> /etc/apache2/conf.d/security
    fi

    perl -pi -e 's/^ServerSignature.*/ServerSignature Off/g' /etc/apache2/conf.d/security
    # if there is no setting then add it.
    if ( ! grep ^ServerSignature /etc/apache2/conf.d/security  >/dev/null 2>/dev/null ) ; then
        echo "ServerSignature Off" >> /etc/apache2/conf.d/security
    fi

    perl -pi -e 's/^TraceEnable.*/TraceEnable Off/g' /etc/apache2/conf.d/security
    # if there is no setting then add it.
    if ( ! grep ^TraceEnable /etc/apache2/conf.d/security  >/dev/null 2>/dev/null ) ; then
        echo "TraceEnable Off" >> /etc/apache2/conf.d/security
    fi


else
    cat > /etc/apache2/conf.d/security<<EOF
ServerTokens Prod
ServerSignature Off
TraceEnable Off
EOF
fi


if [ -e /etc/php5/apache2/php.ini ]; then

    # change any existing setting to be Off.
    perl -pi -e 's/^expose_php = On/expose_php = Off/g'  /etc/php5/apache2/php.ini

    # if there is no setting then add it.
    if ( ! grep ^expose_php /etc/php5/apache2/php.ini  >/dev/null 2>/dev/null ) ; then
        echo "" >> /etc/php5/apache2/php.ini
        echo "expose_php = Off" >> /etc/php5/apache2/php.ini

    fi
fi

#
#  If we have additional sites add them
#
if [ -x /usr/sbin/symbiosis-configure-additional ]; then
    /usr/sbin/symbiosis-configure-additional
    #
    # And install the cron job
    #
    ln -s /usr/sbin/symbiosis-configure-additional /etc/cron.hourly
fi

#
# Install cron jobs
#
if [ -x /usr/sbin/symbiosis-configure-ssl ] ; then
  ln -s /usr/sbin/symbiosis-configure-ssl /etc/cron.hourly
fi

if [ -x /usr/sbin/symbiosis-make-logs ] ; then
  ln -s /usr/sbin/symbiosis-make-logs /etc/cron.daily
fi

#
#  Restart Apache2.
#
if which invoke-rc.d >/dev/null 2>&1; then
    invoke-rc.d apache2 restart
else
    /etc/init.d/apache2 restart
fi

#DEBHELPER#
exit 0
