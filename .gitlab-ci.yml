stages:
  - test
  - package
  - publish
  - install

.test: &test
  stage: test
  image: $CI_REGISTRY/docker-images/layers:stretch-ruby
  script:
    - adduser --home=/srv --shell=/bin/bash --no-create-home --disabled-login --gecos='Symbiosis Administrator,,,' admin
    - chown admin.admin /srv
    - cp test/internal-test.d/conf-stretch/sources.list /etc/apt/sources.list.d/
    - "[ -z \"$TEST_DEPS\" ] || (apt-get update ; apt-get install $TEST_DEPS)"
    - export PACKAGE=${CI_BUILD_NAME##test:}
    - cd $PACKAGE
    - "[ ! -f Makefile ] || make test"

test:backup:
  <<: *test

test:common:
  variables:
    TEST_DEPS: ruby ruby-acme-client ruby-linux-netlink ruby-cracklib ruby-erubis ruby-mocha ruby-webmock ruby-test-unit openssl cracklib-runtime ruby-diffy
  <<: *test

test:cron:
  <<: *test

test:dns:
  variables:
    TEST_DEPS: ruby-linux-netlink ruby-erubis ruby-diffy
  <<: *test

test:doc:
  <<: *test

test:email:
  variables:
    TEST_DEPS: exim4-daemon-heavy dovecot-common dovecot-core dovecot-sieve dovecot-managesieved dovecot-imapd dovecot-pop3d ruby-linux-netlink ruby-eventmachine ruby-cracklib cracklib-runtime ruby-mocha
  <<: *test

test:firewall:
  variables:
    TEST_DEPS: ruby-linux-netlink ruby-sqlite3 netbase iptables
  <<: *test

test:ftpd:
  variables:
    TEST_DEPS: ruby-linux-netlink
  <<: *test

test:httpd:
  variables:
    RUBYOPT: -v
    TEST_DEPS: ruby-linux-netlink ruby-erubis apache2 ruby-diffy golang-go
  <<: *test

test:meta:
  <<: *test

test:monit:
  variables:
    TEST_DEPS: ruby-sqlite3 ruby-log4r ruby-dbus-systemd
  <<: *test

test:mysql:
  <<: *test

test:phpmyadmin:
  <<: *test

test:updater:
  <<: *test

test:webmail:
  <<: *test

test:xmpp:
  <<: *test

.package: &package
  image: $CI_REGISTRY/docker-images/layers:stretch-deb
  stage: package
  script:
    - cp symbiosis.list /etc/apt/sources.list.d/
    - apt-get update
    - export PACKAGE=${CI_BUILD_NAME##package:}
    - echo "$CI_BUILD_NAME" -  "$PACKAGE" - "${CI_BUILD_NAME##package:}"
    - cd $PACKAGE
    - package
  artifacts:
    paths:
      - pkg/

package:common:
  <<: *package
package:backup:
  <<: *package
package:cron:
  <<: *package
package:dns:
  <<: *package
package:doc:
  <<: *package
package:email:
  <<: *package
package:firewall:
  <<: *package
package:ftpd:
  <<: *package
package:httpd:
  <<: *package
package:meta:
  <<: *package
package:monit:
  <<: *package
package:mysql:
  <<: *package
package:phpmyadmin:
  <<: *package
package:updater:
  <<: *package
package:webmail:
  <<: *package
package:xmpp:
  <<: *package

publish:
  stage: publish
  variables:
    RSYNC_HOSTNAME: repo.bytemark.co.uk
  image: $CI_REGISTRY/docker-images/layers:stretch-publish
  script:
    - publish

#Â fails on stretch for the time being - see issue #57 for updates
.install: &install
  stage: install
  tags:
    - systemd-containers
  before_script:
    - MACHINE=$CI_BUILD_ID-symbiosis-$DEBIAN_RELEASE-$ACTION
    - HOSTNAME=$MACHINE.localdomain
    - RUN_ARGS="--wait --quiet --pty --machine $MACHINE"
    - |
      if [ "$ACTION" = "dist-upgrade" ]; then
        machinectl clone ${OLD_DEBIAN_RELEASE} $MACHINE
      else
        machinectl clone ${DEBIAN_RELEASE} $MACHINE
      fi
    - machinectl start $MACHINE
    - |
      while [ "$IP" = "" ]; do
          export IP=$(get-machine-ip $MACHINE)
          sleep 3
      done
    - machinectl copy-to $MACHINE test/internal-test.d /root/test.d
  script:
    - |
      cat > run-test <<END_OF_INTERNAL_TEST
      #!/bin/bash
      set -e

      export ACTION=$ACTION
      export DEBIAN_RELEASE=$DEBIAN_RELEASE
      export OLD_DEBIAN_RELEASE=$OLD_DEBIAN_RELEASE
      export BRANCH_NAME=$CI_BUILD_REF_SLUG
      export HOSTNAME=$HOSTNAMR

      echo "$HOSTNAME" | tee /etc/hostname
      echo "$IP $HOSTNAME" | tee -a /etc/hosts
      hostname $HOSTNAME

      /bin/run-parts --exit-on-error /root/test.d/
      END_OF_INTERNAL_TEST
    - sed -e 's/32;/34;/g' -i run-test
    - chmod +x run-test
    - machinectl copy-to $MACHINE run-test /run-test
    - ssh -o StrictHostKeyChecking=false -o UserKnownHostsFile=/dev/null root@$IP /run-test
    - run-parts --verbose --exit-on-error test/external-test.d
  after_script:
    - MACHINE=$CI_BUILD_ID-symbiosis-$DEBIAN_RELEASE-$ACTION
    - |
      while machinectl status $MACHINE > /dev/null; do
          machinectl stop $MACHINE || true
          sleep 1
      done
    - machinectl remove $MACHINE
  dependencies: []
  variables: &installvars
    DEBIAN_RELEASE: stretch
    OLD_DEBIAN_RELEASE: jessie

install:fresh-install:
  <<: *install
  variables:
    <<: *installvars
    ACTION: install

install:upgrade:
  <<: *install
  allow_failure: true
  variables:
    <<: *installvars
    ACTION: upgrade

install:dist-upgrade:
  <<: *install
  allow_failure: true
  variables:
    <<: *installvars
    ACTION: dist-upgrade

