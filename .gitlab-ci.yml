

stages:
  - test
  - package
  - publish
  - fresh-install
  - install

.test: &test
  stage: test
  image: $CI_REGISTRY/docker-images/layers:stretch-ruby
  script:
    - adduser --home=/srv --shell=/bin/bash --no-create-home --disabled-login --gecos='Symbiosis Administrator,,,' admin
    - chown admin.admin /srv
    - cp autotest/test.d/conf/maker-sources.list /etc/apt/sources.list.d/
    - "[ -z \"$TEST_DEPS\" ] || (apt-get update ; apt-get install $TEST_DEPS)"
    - export PACKAGE=${CI_BUILD_NAME##test:}
    - cd $PACKAGE
    - env
    - "[ ! -f Makefile ] || make test"

test:backup:
  <<: *test

test:common:
  variables:
    TEST_DEPS: ruby ruby-acme-client ruby-linux-netlink ruby-cracklib ruby-erubis ruby-mocha ruby-webmock ruby-test-unit openssl cracklib-runtime
  <<: *test

test:cron:
  <<: *test

test:dns:
  variables:
    TEST_DEPS: ruby-linux-netlink ruby-erubis
  <<: *test

test:doc:
  <<: *test

test:email:
  variables:
    TEST_DEPS: exim4-daemon-heavy dovecot-common dovecot-core dovecot-sieve dovecot-managesieved dovecot-imapd dovecot-pop3d ruby-linux-netlink ruby-eventmachine ruby-cracklib cracklib-runtime ruby-mocha
  <<: *test

test:firewall:
  variables:
    TEST_DEPS: ruby-linux-netlink ruby-sqlite3 netbase iptables
  <<: *test

test:ftpd:
  variables:
    TEST_DEPS: ruby-linux-netlink
  <<: *test

test:httpd:
  variables:
    RUBYOPT: -v
    TEST_DEPS: ruby-linux-netlink ruby-erubis apache2
  <<: *test

test:httpd-logger:
  variables:
    TEST_DEPS: golang-go ruby-linux-netlink
  <<: *test

test:meta:
  <<: *test

test:monit:
  variables:
    TEST_DEPS: ruby-sqlite3 ruby-log4r
  <<: *test

test:mysql:
  <<: *test

test:phpmyadmin:
  <<: *test

test:updater:
  <<: *test

test:webmail:
  <<: *test

test:xmpp:
  <<: *test

.package: &package
  image: $CI_REGISTRY/docker-images/layers:stretch-deb
  stage: package
  script:
    - export PACKAGE=${CI_BUILD_NAME##package:}
    - echo "$CI_BUILD_NAME" -  "$PACKAGE" - "${CI_BUILD_NAME##package:}"
    - cd $PACKAGE
    - package
  artifacts:
    paths:
      - pkg/

package:common:
  <<: *package
package:backup:
  <<: *package
package:cron:
  <<: *package
package:dns:
  <<: *package
package:doc:
  <<: *package
package:email:
  <<: *package
package:firewall:
  <<: *package
package:ftpd:
  <<: *package
package:httpd:
  <<: *package
package:httpd-logger:
  <<: *package
package:meta:
  <<: *package
package:monit:
  <<: *package
package:mysql:
  <<: *package
package:phpmyadmin:
  <<: *package
package:updater:
  <<: *package
package:webmail:
  <<: *package
package:xmpp:
  <<: *package

publish:
  stage: publish
  variables:
    RSYNC_HOSTNAME: repo.bytemark.co.uk
  tags:
    - shell
  script:
    - publish

.install: &install
  stage: install
  image: $CI_REGISTRY/docker-images/base:stretch
  tags:
    - docker-socket
  variables:
    VERBOSE: --verbose
  script:
    - rm -fv /usr/sbin/policy-rc.d
    - cd autotest
    - echo ${CI_BUILD_NAME##install:} > test.d/conf/action
    - "echo deb http://repo.bytemark.co.uk/symbiosis/$CI_BUILD_REF_SLUG/$CI_PIPELINE_ID/ ./ >> test.d/conf/maker-sources.list"
    - run-parts $VERBOSE --new-session --exit-on-error $PWD/test.d

#
# These next two do not work in gitlab-ci, yet.
#
install:dist-upgrade:
  <<: *install
  image: $CI_REGISTRY/docker-images/base:jessie
  allow_failure: true

install:upgrade:
  <<: *install
  allow_failure: true

install:fresh-install:
  <<: *install
  stage: fresh-install


