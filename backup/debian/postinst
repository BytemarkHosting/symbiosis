#!/bin/bash
##
##  The post-install script needs to do two things:
##
##    1.  If this is a migration, then configure it.
##
##    2.  Otherwise force a rebuild
##
###

set -e


##
## Skip, if we are not in "configure" state
##
if [ "$1" != "configure" ]; then
        echo "I: Skipping configuration"
        exit 0
fi

##
##  The backup2l configuration file.
##
conf=/etc/backup2l.conf

#
#  The default directories to backup
#
SRCLIST=(/etc /root /srv /home /var/mail /var/lib /usr/local /var/backups/mysql)

##
##  If we're migrated then we'll have the file /etc/backup2l.conf
## be a symlink to the generated file.
##
##  So we test to see if the file exists and is a symlink.
##
if ( ! test -e $conf -a -h $conf ) ; then
    echo "UPGRADING"

    #
    # We know that the conf file isn't our expected symlink.
    #
    mv $conf $conf.old >/dev/null 2>/dev/null || true

    #
    # Source the file to find the backup directories.
    #
    . $conf.old
fi


#
#  Ensure our list of directories is setup
#
perl -pi -e "s!#SRCLIST#!${SRCLIST[*]}!g" /etc/symbiosis/backup.d/conf.d/10-directories.conf


##
##  Finally, regardless of whether we're upgrading or not, we
## trigger a rebuild
##
cd /etc/symbiosis/backup.d/ && make


##
##  Now link the backup2 configuration file with the generated one
##
ln -sf /etc/symbiosis/backup.d/backup2l.conf $conf


#
#  Obsolete files?  Remove them
#
if [ -d /etc/bytemark-vhost/backup.d ]; then
    rm -rf  /etc/bytemark-vhost/backup.d
fi
for i in upload-backup download-backup dump-mysql ; do
    if [ -e /etc/symbiosis/backup.d/pre-backup.d/$i ]; then
        rm /etc/symbiosis/backup.d/pre-backup.d/$i
    fi
    if [ -e /etc/symbiosis/backup.d/post-backup.d/$i ]; then
        rm /etc/symbiosis/backup.d/post-backup.d/$i
    fi
done


#DEBHELPER#
exit 0
